容易出异常的地方：

1、出现异常信息 ：  $ {jdbc.driver} 是一个无效的数据，说明配置文件没有被加载成功，同一个项目中，只能扫描一次属性文件
	加载属性配置文件的时候，只能扫描一次，不然的话，会有属性文件被漏掉
	一个项目不论是jar，还是war都只能扫描一次

2、使用dubbo服务的时候要特别注意，要将所有的实体类进行序列化（Serializable) 操作

3、 dubbo中的 Provider
     dubbo服务必须交给dubbo去管理，使用注解<dubbo:service interface="dubbo接口所在类" ref="dubbo实现类的bean对象">

4、dubbo中的Consumer(消费者)
     必须取个名字，并且告知使用的是什么注册中心服务
    告知注册中心的地址，才能从注册中心获取对应的服务

5、如果使用dubbo服务中用到了分页插件的话，则需要在真正的消费着使用分页插件，不然容易报警告
    因为在消费者中使用了dubbo服务的接口，对接口实现类进行了代理，因此也就对dubbo服务接口的实现类对象进行了实例化
  而在dubbo接口实现类中使用到了分页插件，因此在Consumer中使用分页插件依赖才不会导致异常的发生


6、dubbo的接口才是真正操作数据库的，因此要对其接口实现类进行事务管理操作
     但是如果直接使用@Service注解的时候容易跟Spring的注解相互冲突，会对aop中的声明式事务造成影响

7、dubbo中扫描注解包错误，dubbo服务无法注入，只能扫描准确的包路径，不然dubbo的对象会报空指针异常

8、调用dubbo服务的service实现类，必须交给Spring进行管理



